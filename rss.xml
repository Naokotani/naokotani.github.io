<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Joe Dev Zone</title>
    <link>https://joe-dev.com/</link>
    <category>Web Development</category> 
    <description>
      A Developer blog for Chris Hughes. Specializes in JavaScript, Rust, Web development, SQL
    </description>
    
    <item>
      <title>Understanding Git Branching</title>
      <pubDate>Sun, 07 Jul 2024 16:55:00 -0300</pubDate>
      <guid>/posts/git-branching.html</guid>
      <link>/posts/git-branching.html</link>
    <description><![CDATA[
    <html><head></head><body>
    <p>
Branching in Git is lightweight and powerful. This post explains the basics of creating, switching, and merging branches in everyday development.
</p>
<div id="outline-container-org26808b8" class="outline-2">
<h2 id="org26808b8">Creating Branches</h2>
<div class="outline-text-2" id="text-org26808b8">
<p>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a posuere urna. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.
<img src="images/1759235906_grim.png" alt="1759235906_grim.png">
</p>
</div>
</div>
<div id="outline-container-org518e65f" class="outline-2">
<h2 id="org518e65f">Merging Branches</h2>
<div class="outline-text-2" id="text-org518e65f">
<p>
Nam porta, magna nec fringilla malesuada, justo arcu varius neque, eget tempor massa erat sed justo.
</p>
</div>
</div>

    </body></html>
    ]]></description>
    </item>
    
    <item>
      <title>Docker Basics for Developers</title>
      <pubDate>Wed, 12 Jun 2024 07:11:00 -0300</pubDate>
      <guid>/posts/docker-basics.html</guid>
      <link>/posts/docker-basics.html</link>
    <description><![CDATA[
    <html><head></head><body>
    <p>
Docker simplifies application deployment by containerizing your code and dependencies. Letâ€™s look at the essential concepts that every developer should know.
</p>
<div id="outline-container-org52454eb" class="outline-2">
<h2 id="org52454eb">Add Source code in Org!</h2>
<div class="outline-text-2" id="text-org52454eb">
<div class="org-src-container">
<pre class="src src-c"><span style="color: #7dcfff; font-weight: bold;">#include</span> <span style="color: #a9b1d6;">&lt;</span><span style="color: #9ece6a;">stdio.h</span><span style="color: #a9b1d6;">&gt;</span>
<span style="color: #7dcfff; font-weight: bold;">#include</span> <span style="color: #a9b1d6;">&lt;</span><span style="color: #9ece6a;">stdlib.h</span><span style="color: #a9b1d6;">&gt;</span>
<span style="color: #7dcfff; font-weight: bold;">#include</span> <span style="color: #a9b1d6;">&lt;</span><span style="color: #9ece6a;">time.h</span><span style="color: #a9b1d6;">&gt;</span>

<span style="color: #c0caf5;">int</span> <span style="color: #7aa2f7;">meaning_of_life</span><span style="color: #a9b1d6;">(</span><span style="color: #c0caf5;">void</span><span style="color: #a9b1d6;">)</span> <span style="color: #a9b1d6;">{</span>
    srand<span style="color: #7aa2f7;">(</span><span style="color: #ff9e64;">(</span><span style="color: #c0caf5;">unsigned</span><span style="color: #ff9e64;">)</span> time<span style="color: #ff9e64;">(</span><span style="color: #ff9e64;">NULL</span><span style="color: #ff9e64;">)</span><span style="color: #7aa2f7;">)</span>;
    <span style="color: #c0caf5;">int</span> <span style="color: #c0caf5;">tries</span> = <span style="color: #ff9e64; font-weight: bold;">0</span>;
    <span style="color: #c0caf5;">int</span> <span style="color: #c0caf5;">n</span>;
    <span style="color: #bb9af7;">do</span> <span style="color: #7aa2f7;">{</span>
        n = rand<span style="color: #ff9e64;">()</span> % <span style="color: #ff9e64; font-weight: bold;">100</span>;  <span style="color: #51587a;">// </span><span style="color: #51587a;">random number 0&#8211;99</span>
        tries++;
    <span style="color: #7aa2f7;">}</span> <span style="color: #bb9af7;">while</span> <span style="color: #7aa2f7;">(</span>n != <span style="color: #ff9e64; font-weight: bold;">42</span><span style="color: #7aa2f7;">)</span>;

    printf<span style="color: #7aa2f7;">(</span><span style="color: #9ece6a;">"Found the meaning of life (%d) after %d tries!\n"</span>, n, tries<span style="color: #7aa2f7;">)</span>;
    <span style="color: #bb9af7;">return</span> n;
<span style="color: #a9b1d6;">}</span>

<span style="color: #c0caf5;">int</span> <span style="color: #7aa2f7;">main</span><span style="color: #a9b1d6;">(</span><span style="color: #c0caf5;">void</span><span style="color: #a9b1d6;">)</span> <span style="color: #a9b1d6;">{</span>
    meaning_of_life<span style="color: #7aa2f7;">()</span>;
    <span style="color: #bb9af7;">return</span> <span style="color: #ff9e64; font-weight: bold;">0</span>;
<span style="color: #a9b1d6;">}</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-org3fc3c8b" class="outline-2">
<h2 id="org3fc3c8b">Volumes and Networking</h2>
<div class="outline-text-2" id="text-org3fc3c8b">
<p>
Aliquam erat volutpat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas.
</p>
</div>
</div>

    </body></html>
    ]]></description>
    </item>
    
    <item>
      <title>Building REST APIs with FastAPI</title>
      <pubDate>Wed, 22 May 2024 13:37:00 -0300</pubDate>
      <guid>/posts/rest-with-fastapi.html</guid>
      <link>/posts/rest-with-fastapi.html</link>
    <description><![CDATA[
    <html><head></head><body>
    <p>
FastAPI is a modern Python framework designed for speed and developer productivity. In this post, we will walk through the basics of creating and serving a simple API.
</p>
<div id="outline-container-org23d32de" class="outline-2">
<h2 id="org23d32de">Defining Routes</h2>
<div class="outline-text-2" id="text-org23d32de">
<p>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec viverra purus ac lectus maximus, at laoreet ligula tempor.
</p>
</div>
</div>
<div id="outline-container-org7fc8beb" class="outline-2">
<h2 id="org7fc8beb">Automatic Documentation</h2>
<div class="outline-text-2" id="text-org7fc8beb">
<p>
Mauris commodo, eros sit amet pulvinar consequat, lorem risus vestibulum neque, sed imperdiet odio turpis id velit.
</p>
</div>
</div>

    </body></html>
    ]]></description>
    </item>
    
    <item>
      <title>Getting Started with Emacs Org Mode</title>
      <pubDate>Wed, 10 Apr 2024 11:25:00 -0300</pubDate>
      <guid>/posts/emacs-org-mode.html</guid>
      <link>/posts/emacs-org-mode.html</link>
    <description><![CDATA[
    <html><head></head><body>
    <p>
Org mode is one of the most powerful tools for keeping track of notes, tasks, and projects. Here we take a look at its basic structure and capabilities.
</p>
<div id="outline-container-org021027d" class="outline-2">
<h2 id="org021027d">Headings and Subheadings</h2>
<div class="outline-text-2" id="text-org021027d">
<p>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Sed sed lacus nec nisi dignissim vulputate.
</p>
</div>
</div>
<div id="outline-container-orgf2d15c7" class="outline-2">
<h2 id="orgf2d15c7">Scheduling and Deadlines</h2>
<div class="outline-text-2" id="text-orgf2d15c7">
<p>
Donec sit amet risus sit amet risus tristique blandit. Proin bibendum, erat nec dapibus luctus, est felis viverra orci, vel fermentum urna elit non magna.
</p>
</div>
</div>

    </body></html>
    ]]></description>
    </item>
    
    <item>
      <title>Learning Go Concurrency</title>
      <pubDate>Thu, 15 Feb 2024 05:42:00 -0400</pubDate>
      <guid>/posts/go-concurrency.html</guid>
      <link>/posts/go-concurrency.html</link>
    <description><![CDATA[
    <html><head></head><body>
    <p>
Go makes concurrency easy with goroutines and channels. In this post we explore the basic building blocks of concurrent programming in Go, using simple examples and patterns.
</p>
<div id="outline-container-org38fb806" class="outline-2">
<h2 id="org38fb806">Spawning Goroutines</h2>
<div class="outline-text-2" id="text-org38fb806">
<p>
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam erat volutpat. Suspendisse vehicula mauris vitae nulla viverra, et feugiat sapien varius.
</p>
</div>
</div>
<div id="outline-container-org0e28ca9" class="outline-2">
<h2 id="org0e28ca9">Communicating with Channels</h2>
<div class="outline-text-2" id="text-org0e28ca9">
<p>
Curabitur sit amet metus mi. Integer feugiat congue magna, sed facilisis purus pellentesque eget. In consequat efficitur nunc.
</p>
</div>
</div>

    </body></html>
    ]]></description>
    </item>
    
  </channel>
</rss> 
